/* 
  styles.css – Global stylesheet for the Paramedic Quick Reference app.
  
  Goals:
  1. Establish a basic layout: header at top, main content area filling the window, side panels (patient info, history) positioned appropriately.
  2. Provide visual styling for header controls, search bar, list of topics, detail view, etc., enhancing usability (e.g., distinguish clickable items, highlight selections).
  3. Hide and show elements based on classes (e.g., .hidden for hidden elements, .expanded for expanded menu sections, .active for highlighted selections).
  4. Ensure no conflicting styles: use unique IDs/classes defined in HTML, and maintain consistency (e.g., same spacing, font across the app).
  5. Use placeholders for any asset-based styling (like icons) with the assumption assets are in the assets/ folder.
  6. Keep the design simple, readable, and adjust for basic responsiveness (ES6+ browsers, assume modern CSS support).
  
  Sections:
  - Reset/Basic Element Styles
  - Layout containers (header, main, asides)
  - Header specific (title, buttons, search bar)
  - Topics list styling (categories, items, icons for expansion)
  - Detail view styling
  - Patient info panel styling
  - History panel styling
  - Utility classes (.hidden, .active, etc.)
*/

/* Basic reset and typography */
body, h1, h2, ul, li, p, button, input {
  margin: 0;
  padding: 0;
}
body {
  font-family: sans-serif;
  line-height: 1.5;
  background: #fdfdfd;  /* light background for readability */
  color: #000;
}
ul {
  list-style: none;
}
button {
  cursor: pointer;
  /* Basic styling for buttons */
  background: #eee;
  border: 1px solid #ccc;
  padding: 0.25em 0.5em;
  font: inherit;
}
button:disabled {
  opacity: 0.5;
  cursor: default;
}

/* Layout: Header, Main, Asides */
#app-header {
  background: #004080;         /* dark blue header background (for example) */
  color: #fff;
  padding: 0.5em;
  display: flex;
  align-items: center;
  flex-wrap: wrap;
  justify-content: space-between;
  /* The header will contain multiple controls and should be responsive if needed */
}
#app-title {
  flex: 1;
  text-align: center;
  font-size: 1.25em;
  /* The title is centered within the header */
}
#app-header button {
  margin: 0 0.25em;
  /* override background for header buttons to differentiate */
  background: #fff;
  color: #004080;
  border: none;
  border-radius: 3px;
}
#app-header #search-bar {
  position: relative;
  display: inline-block;
  /* search bar container aligns with header items on the right side */
}
#search-input {
  padding: 0.25em;
  width: 12em;  /* width of the search input field */
  border: none;
  border-radius: 3px;
}
#suggestions-list {
  position: absolute;
  top: 100%;
  left: 0;
  width: 100%;
  max-height: 200px;
  overflow-y: auto;
  background: #fff;
  border: 1px solid #ccc;
  border-top: none;
  z-index: 1000;
}
#suggestions-list li {
  padding: 0.25em;
  cursor: pointer;
}
#suggestions-list li:hover {
  background: #f0f0f0;
}

/* Main content area layout */
#main-content {
  position: relative;
  /* If needed, add flex or grid to position side panels relative to content */
  /* For simplicity, main content takes full width; side panels (patient-info, history) will overlay when visible */
}

/* Topics List View styling */
#topics-view {
  padding: 1em;
}
#topics-nav {
  /* no special styling on nav container beyond list style resets */
}
#topics-list .category {
  margin: 0.5em 0;
}
.category-title {
  /* Category titles are clickable to expand/collapse */
  font-weight: bold;
  cursor: pointer;
  position: relative;
  padding-left: 1.5em;  /* space for the arrow icon */
}
/* Arrow icon before category title (using a generic arrow placeholder or an image) */
.category-title::before {
  content: "▶";  /* placeholder: right-pointing triangle */
  position: absolute;
  left: 0;
  /* If using image icons from assets, replace content with url() to that image 
     e.g., content: url("../assets/images/arrow-right.png"); 
     and adjust transform for rotation on expand. */
  transition: transform 0.2s;
}
.category.expanded .category-title::before {
  /* Rotate the arrow icon downwards when expanded (if using the triangle or a rotatable icon) */
  transform: rotate(90deg);
}
/* Subcategory list (hidden by default via .hidden class) */
.subcategory {
  margin-left: 1em;
  /* Indent sub-lists for hierarchy */
}
.item {
  cursor: pointer;
  margin: 0.25em 0;
  padding-left: 1.5em;  /* align with category text (no icon, but for consistent indent) */
}
/* Highlight for active/selected item */
.item.active {
  background: #cce5ff;
  /* e.g., light blue background to indicate the last viewed topic */
}
/* You could also style the active item text differently or add a border to make it stand out */

/* Detail View styling */
#detail-view {
  padding: 1em;
}
#detail-view.hidden {
  display: none;
}
#detail-title {
  font-size: 1.2em;
  margin-bottom: 0.5em;
}
#detail-content {
  /* The container for detail info (doses, notes, etc.) */
}
#detail-content p {
  margin: 0.5em 0;
}
.dose-info {
  /* A class that might be applied to dosage info paragraphs in detail view */
  font-weight: bold;
}
.dose-info.pediatric {
  /* Style for pediatric dose info (if highlighting when patient is pediatric) */
  color: #d22;  /* e.g., reddish for emphasis */
}
.dose-info.adult {
  /* Style for adult dose info (if deemphasizing when patient is pediatric) */
  color: #000;
}
.dose-info.inactive {
  /* If a dose line is not applicable (e.g., adult dose for pediatric patient), we can dim or strikethrough */
  color: #777;
  text-decoration: line-through;
}

/* Patient Info Sidebar styling */
#patient-info {
  position: fixed;
  top: 60px;  /* adjust top offset to appear below header (if header is ~60px tall) */
  right: 0;
  width: 250px;
  max-width: 80%;
  background: #f8f8f8;
  border: 1px solid #ccc;
  padding: 1em;
  box-shadow: -2px 0 5px rgba(0,0,0,0.1);
  /* Initially hidden (using .hidden class) */
}
#patient-info.hidden {
  display: none;
}
#patient-info h2 {
  font-size: 1.1em;
  margin-bottom: 0.5em;
}
#patient-info label {
  display: block;
  margin: 0.5em 0 0.2em;
}
#patient-info input {
  width: 100%;
  padding: 0.25em;
  margin-bottom: 0.5em;
  box-sizing: border-box;
}

/* History Panel styling */
#history-panel {
  position: fixed;
  top: 60px;  /* similarly offset from header */
  right: 0;
  width: 200px;
  max-width: 70%;
  max-height: 80%;
  background: #fff;
  border: 1px solid #ccc;
  padding: 0.5em;
  overflow-y: auto;
  box-shadow: -2px 0 8px rgba(0,0,0,0.2);
}
#history-panel.hidden {
  display: none;
}
#history-panel h2 {
  font-size: 1.1em;
  margin-bottom: 0.5em;
  text-align: center;
  background: #004080;
  color: #fff;
  padding: 0.25em 0;
}
#history-list li {
  cursor: pointer;
  padding: 0.2em 0;
  border-bottom: 1px solid #eee;
}
#history-list li:hover {
  background: #f0f0f0;
}

/* Utility classes */
.hidden {
  display: none !important;
}
.expanded {
  /* This class can be applied to a category <li> to indicate its sublist is expanded.
     (The actual hiding/showing of the sublist is primarily controlled by adding/removing .hidden on the UL,
      but .expanded is used for styling purposes like rotating the arrow icon.) */
}
.active {
  /* Highlighting an active element (like a selected .item) is handled above with .item.active.
     This .active class can also be used on other elements if needed for consistency. */
}
